export const schema = {
  models: {
    Organization: {
      name: 'Organization',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'AWSEmail',
          isRequired: false,
          attributes: [],
        },
        url: {
          name: 'url',
          isArray: false,
          type: 'AWSURL',
          isRequired: false,
          attributes: [],
        },
        phone: {
          name: 'phone',
          isArray: false,
          type: 'AWSPhone',
          isRequired: false,
          attributes: [],
        },
        Events: {
          name: 'Events',
          isArray: true,
          type: {
            model: 'Event',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'organizationID',
          },
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'Organizations',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'public',
                operations: ['create', 'update', 'delete', 'read'],
              },
            ],
          },
        },
      ],
    },
    Event: {
      name: 'Event',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        title: {
          name: 'title',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        description: {
          name: 'description',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        zipcode: {
          name: 'zipcode',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'AWSEmail',
          isRequired: false,
          attributes: [],
        },
        phone: {
          name: 'phone',
          isArray: false,
          type: 'AWSPhone',
          isRequired: false,
          attributes: [],
        },
        url: {
          name: 'url',
          isArray: false,
          type: 'AWSURL',
          isRequired: false,
          attributes: [],
        },
        startDateTime: {
          name: 'startDateTime',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
        },
        endDateTime: {
          name: 'endDateTime',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
        },
        streetAddress: {
          name: 'streetAddress',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        city: {
          name: 'city',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        state: {
          name: 'state',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        country: {
          name: 'country',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        banner: {
          name: 'banner',
          isArray: false,
          type: 'AWSURL',
          isRequired: false,
          attributes: [],
        },
        createdBy: {
          name: 'createdBy',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        createdOn: {
          name: 'createdOn',
          isArray: false,
          type: 'AWSDate',
          isRequired: false,
          attributes: [],
        },
        needRsvp: {
          name: 'needRsvp',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        isActive: {
          name: 'isActive',
          isArray: false,
          type: 'Boolean',
          isRequired: false,
          attributes: [],
        },
        paymentAmount: {
          name: 'paymentAmount',
          isArray: false,
          type: 'Float',
          isRequired: false,
          attributes: [],
        },
        organizationID: {
          name: 'organizationID',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        RSVPS: {
          name: 'RSVPS',
          isArray: true,
          type: {
            model: 'RSVP',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'eventID',
          },
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'Events',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byOrganization',
            fields: ['organizationID'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'public',
                operations: ['create', 'update', 'delete', 'read'],
              },
            ],
          },
        },
      ],
    },
    RSVP: {
      name: 'RSVP',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        numberOfAttendees: {
          name: 'numberOfAttendees',
          isArray: false,
          type: 'Int',
          isRequired: false,
          attributes: [],
        },
        comments: {
          name: 'comments',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        paidAmount: {
          name: 'paidAmount',
          isArray: false,
          type: 'Float',
          isRequired: false,
          attributes: [],
        },
        eventID: {
          name: 'eventID',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        userID: {
          name: 'userID',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'RSVPS',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'key',
          properties: {
            name: 'byEvent',
            fields: ['eventID'],
          },
        },
        {
          type: 'key',
          properties: {
            name: 'byUser',
            fields: ['userID'],
          },
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'public',
                operations: ['create', 'update', 'delete', 'read'],
              },
            ],
          },
        },
      ],
    },
    User: {
      name: 'User',
      fields: {
        id: {
          name: 'id',
          isArray: false,
          type: 'ID',
          isRequired: true,
          attributes: [],
        },
        name: {
          name: 'name',
          isArray: false,
          type: 'String',
          isRequired: false,
          attributes: [],
        },
        email: {
          name: 'email',
          isArray: false,
          type: 'AWSEmail',
          isRequired: false,
          attributes: [],
        },
        phone: {
          name: 'phone',
          isArray: false,
          type: 'AWSPhone',
          isRequired: false,
          attributes: [],
        },
        RSVPS: {
          name: 'RSVPS',
          isArray: true,
          type: {
            model: 'RSVP',
          },
          isRequired: false,
          attributes: [],
          isArrayNullable: true,
          association: {
            connectionType: 'HAS_MANY',
            associatedWith: 'userID',
          },
        },
        createdAt: {
          name: 'createdAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
        updatedAt: {
          name: 'updatedAt',
          isArray: false,
          type: 'AWSDateTime',
          isRequired: false,
          attributes: [],
          isReadOnly: true,
        },
      },
      syncable: true,
      pluralName: 'Users',
      attributes: [
        {
          type: 'model',
          properties: {},
        },
        {
          type: 'auth',
          properties: {
            rules: [
              {
                allow: 'public',
                operations: ['create', 'update', 'delete', 'read'],
              },
            ],
          },
        },
      ],
    },
  },
  enums: {},
  nonModels: {},
  codegenVersion: '3.3.1',
  version: '4514aeea855f41a4eb909e84955d96d9',
};
