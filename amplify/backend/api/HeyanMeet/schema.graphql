type Subscribe @model @auth(rules: [{allow: public}]) {
  id: ID!
  organizationID: ID! @index(name: "byOrganization")
  userID: ID! @index(name: "byUser")
  Organization: Organization @belongsTo(fields: ["organizationID"])
}

type Organization @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: AWSEmail
  url: AWSURL
  phone: AWSPhone
  Events: [Event] @hasMany(indexName: "byOrganization", fields: ["id"])
  Subscribes: [Subscribe] @hasMany(indexName: "byOrganization", fields: ["id"])
}

type Event @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  description: String
  zipcode: String
  email: AWSEmail
  phone: AWSPhone
  url: AWSURL
  startDateTime: AWSDateTime
  endDateTime: AWSDateTime
  streetAddress: String
  city: String
  state: String
  country: String
  banner: String
  createdBy: String
  createdOn: AWSDate
  needRsvp: Boolean
  isActive: Boolean
  paymentAmount: Float
  organizationID: ID! @index(name: "byOrganization")
  RSVPS: [RSVP] @hasMany(indexName: "byEvent", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: AWSEmail
  phone: AWSPhone
  RSVPS: [RSVP] @hasMany(indexName: "byUser", fields: ["id"])
  Subscribes: [Subscribe] @hasMany(indexName: "byUser", fields: ["id"])
}

type RSVP @model @auth(rules: [{allow: public}]) {
  id: ID!
  numberOfAttendees: Int
  comments: String
  paidAmount: Float
  eventID: ID! @index(name: "byEvent")
  userID: ID! @index(name: "byUser")
  username: String
}
 